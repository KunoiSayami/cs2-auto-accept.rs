name: Build Releases

on:
  push:

  workflow_dispatch:
    branches:
      - master
    pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  BINARY_NAME: cs2-auto-accept_windows_amd64.exe
  GUI_BINARY_NAME: cs2-auto-accept-gui_windows_amd64.exe

jobs:
  build:
    strategy:
      matrix:
        job:
          - os: windows-latest

    name: Build
    runs-on: ${{ matrix.job.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Get metadata
        shell: bash
        run: |
          cargo metadata --format-version=1 --no-deps | jq '.packages[0].dependencies[] | {name, req}' > dep.lock
      - name: Cache Cargo packages
        id: cache-cargo
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cargo-${{  hashFiles('dep.lock') }}
          path: |
            ~/.cargo
            ~/.rustup
            $PWD/target
      - name: Build binary
        id: build
        shell: bash
        run: |
          cargo build --profile release
          mv target/release/cs2-auto-accept.exe target/release/$GUI_BINARY_NAME
          cargo build --no-default-features --profile release
          mv target/release/cs2-auto-accept.exe target/release/$BINARY_NAME
          echo "bin=target/release/$BINARY_NAME" >> $GITHUB_OUTPUT
          echo "bin-name=$BINARY_NAME" >> $GITHUB_OUTPUT
          echo "gui-bin=target/release/$GUI_BINARY_NAME" >> $GITHUB_OUTPUT
          echo "gui-bin-name=$GUI_BINARY_NAME" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ steps.build.outputs.bin-name }}
          path: ${{ steps.build.outputs.bin }}
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ steps.build.outputs.gui-bin-name }}
          path: ${{ steps.build.outputs.gui-bin }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ steps.build.outputs.bin }}
            ${{ steps.build.outputs.gui-bin }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
